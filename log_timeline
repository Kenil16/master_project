11/09/2020:
The day has been spend on litterature search. A number of articles were found which is going to be used in the related work section of the report. 

12/09/2020:
PX4 has been installed. Moreover, a 3D model of the aruco markers has been made. However, the model could not be importet into Gazebo. A solution to this must be found. 12/09/2020:

16/09/2020:
The drone to be used in this project has been implemented as well as the optitrack world in Gazebo. 

04/10/2020:
Arcuo marker detection has been finished where the correct pose from the drone to the marker has been found. Much time has been spend in getting this pose estimation to work proberly. 
This was due to the transformation matrices were not calculated correctly. The ROS method euler_from_matrix(T_drone_marker,'sxyz') was used instead of euler_from_matrix(T_drone_marker,'rxyz'). 
This caused the caulculations to be done wrongly. Also T_drone_camera = euler_matrix(-np.pi/2, np.pi/2,0,'rxyz') np.pi/2 was used instaed of 1.5 which also was a problem. 
Kalman Filters have been implemented for the pose. Maybe better choices of VAR could be found for even better tracking. 

24/10/2020:
Waypoint check fixed. For some reason subcribing to setpoint_local does not work. Strange errors were seen when the local pose of the uav where set to be equal to the wanted setpoint which resultet in that the waypoint check where accomplished strait away. Here changing the waypoint check where the wanted pos where given as input fixed the problem.

26/10/2020:
Kalman filter changed to trust new marker poses more to get a more dynamic update of marker poses in respect to the drone. This solved the problem of vision based navigation in PX4. However, the velocity in the z direction is above max. This could be because of the GPS (Vision pose estimate in the z direction) having a too big variance. This could be solved by using a aruco board for higher precision. This is due to the sensor fusion with IMU, GPS etc. 

31/10/2020:
Marker detection is working with aruco board. However, some of the detected markers in the aruco board seems to be hard to detect. Bigger separation between arucos in the board yeilds higher presicion. This can be due to the arrancement of the aruco on the wall model. The top of the world model should be bigger so that a higher difference between the board and background is made. Cameras uses lot of CPU - Try to lower the cam resolution.

02/10/2020:
ArUco detection for both front and bottom cam works now. However, there seems to be probelms with the translation vector from pose estimation. Here a opposite sign error in the x direction wa observed. This must be fixed! The problem is from the pose from aruco to camera.

