<?xml version="1.0"?>
<launch>
    <!-- Posix SITL environment launch script -->
    <!-- launches PX4 SITL, Gazebo environment, and spawns vehicle -->
    <!-- vehicle pose landing route 1 pos <2.5, 3.5, 0> start pos <-3,0,0> --> 
    <arg name="x" default="-3"/> 
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="sdu_drone_mono_cam"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/$(arg worlds)"/> <!--optitrack.world"/>-->
    <arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>
    <env name="PX4_SIM_MODEL" value="$(arg vehicle)" />
    <env name="PX4_ESTIMATOR" value="$(arg est)" />

    <!-- gazebo configs -->
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>
    <!-- PX4 SITL -->
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>
    <node name="sitl" pkg="px4" type="px4" output="screen"
        args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>

    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>

    <!-- MAVROS and vehicle configs -->
    <arg name="ID" value="0"/>
    <arg name="fcu_url" default="udp://:14540@localhost:14580"/>
    <!-- MAVROS -->
    <include file="$(find mavros)/launch/px4.launch">
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="gcs_url" value=""/>
        <arg name="tgt_system" value="$(eval 1 + arg('ID'))"/>
        <arg name="tgt_component" value="1"/>
    </include>

    <!-- gazebo model -->
    <node name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg sdf) -model $(arg vehicle) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

    <arg name="drone_control_args"/>
    <arg name="autonomous_flight_args"/>
    <node pkg="offboard_control" type="drone_control.py" name="drone_control" output="screen" args="$(arg drone_control_args)"></node>
    <node pkg="offboard_control" type="ground_control.py" name="ground_control"  launch-prefix="gnome-terminal --command"></node>
    <node pkg="offboard_control" type="loiter_pilot.py" name="loiter_pilot" output="screen"></node>
    <node pkg="offboard_control" type="autonomous_flight.py" name="autonomous_flight" output="screen" cwd="node" args="$(arg autonomous_flight_args)"></node>
    <node pkg="marker_detection" type="marker_detection.py" name="marker_detection" output="screen" cwd="node"></node>
    <node pkg="marker_detection" type="sensor_fusion.py" name="sensor_fusion" output="screen" cwd="node"></node>
</launch>
